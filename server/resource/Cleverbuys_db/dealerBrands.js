/**
 * 
 * 
  _____                      _              _ _ _     _   _     _        __ _ _      
 |  __ \                    | |            | (_) |   | | | |   (_)      / _(_) |     
 | |  | | ___    _ __   ___ | |_    ___  __| |_| |_  | |_| |__  _ ___  | |_ _| | ___ 
 | |  | |/ _ \  | '_ \ / _ \| __|  / _ \/ _` | | __| | __| '_ \| / __| |  _| | |/ _ \
 | |__| | (_) | | | | | (_) | |_  |  __/ (_| | | |_  | |_| | | | \__ \ | | | | |  __/
 |_____/ \___/  |_| |_|\___/ \__|  \___|\__,_|_|\__|  \__|_| |_|_|___/ |_| |_|_|\___|
 
 * DO NOT EDIT THIS FILE!! 
 * 
 *  TO CUSTOMIZE dealerBrands.js PLEASE EDIT ../custom/dealerBrandsCustom.js
 * 
 *  -- THIS FILE WILL BE OVERWRITTEN ON THE NEXT SKAFFOLDER'S CODE GENERATION --
 * 
 */
const app = require('../../app.js');
const db_Cleverbuys_db = require('../../db/Cleverbuys_db_schema.js')
const properties = require('../../properties.js');
const handleError = require('../../security/util.js').handleError;
require('./custom/dealerBrandsCustom.js');

/*
 * SCHEMA DB dealerBrands
 * 
	{
		brandID: {
			type: 'Number', 
			required : true
		},
		dealershipID: {
			type: 'Number', 
			required : true
		},
		//RELATIONS
		
		
		//EXTERNAL RELATIONS
		
		
	}
 * 
 */



//CRUD METHODS


/**
 * dealerBrandsService.create
 *   @description CRUD ACTION create
 *
 */
app.post(properties.api + '/dealerbrands', function (req, res) {
	obj = new db_Cleverbuys_db.dealerBrands(req.body);
	obj.save(function (err) {
		if (err) return handleError(err, res);
		res.send(obj);
	});
});

/**
 * dealerBrandsService.delete
 *   @description CRUD ACTION delete
 *   @param ObjectId id Id
 *
 */
app['delete'](properties.api + '/dealerbrands/:id', function (req, res) {
	db_Cleverbuys_db.dealerBrands.findByIdAndRemove(req.params.id, function (err) {
		  if (err) return handleError(err, res);
		  res.send(err);
	});
});

/**
 * dealerBrandsService.findBybrandID
 *   @description CRUD ACTION findBybrandID
 *   @param Objectid key Id of the resource brandID to search
 *
 */
app.get(properties.api + '/dealerbrands/findBybrandID/:key', function (req, res) {

	db_Cleverbuys_db.dealerBrands.find({ 'brandID' : req.params.key}).exec(function (err, list) {
		if (err) return handleError(err, res);
		res.send(list);
	});
	
});

/**
 * dealerBrandsService.get
 *   @description CRUD ACTION get
 *   @param ObjectId id Id resource
 *
 */
app.get(properties.api + '/dealerbrands/:id', function (req, res) {
	db_Cleverbuys_db.dealerBrands.findOne({_id:req.params.id}).exec(function (err, obj) {
		if (err) return handleError(err, res);
		res.send(obj);
	});
});

/**
 * dealerBrandsService.list
 *   @description CRUD ACTION list
 *
 */
app.get(properties.api + '/dealerbrands', function (req, res) {
	db_Cleverbuys_db.dealerBrands.find().exec(function (err, list) {
		if (err) return handleError(err, res);
		res.send(list);
	});
});

/**
 * dealerBrandsService.update
 *   @description CRUD ACTION update
 *   @param ObjectId id Id
 *
 */
app.post(properties.api + '/dealerbrands/:id', function (req, res) {
	db_Cleverbuys_db.dealerBrands.findByIdAndUpdate(req.params.id, req.body, {'new': true}, function (err, obj) {
		if (err) return handleError(err, res);
		res.send(obj);
	});
});


/*
 * CUSTOM SERVICES
 * 
 *	These services will be overwritten and implemented in  Custom.js
 */

